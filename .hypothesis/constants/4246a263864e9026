# file: C:\Users\gregc\AppData\Roaming\Python\Python310\site-packages\pygments\lexers\jvm.py
# hypothesis_version: 6.131.8

[0.3, 0.5, 0.6, 1.0, ' \\n\\t\\r', '!=', '"', '"""', '"""(?!")', '""".*?"""', '""".*?"""(?!")', '"""\\n', '"(\\\\\\\\|\\\\"|[^"])*"', '#!(.*?)$', '#.*$', '#/', '#[0-9a-fA-F]+', '#\\(', '#\\[', '#\\{', '#pop', '#push', '#r\\[', '%', '%>', '%s%s*', '%s%s*(?:(?<=_)%s+)?', '%s+', '%s:=', "'", "'''", "'''.*?'''", "'\\[(?!')", "'\\\\.'|'[^\\\\]'", '(', '(%s)([ \\t\\r]*)(:)', '(%s)(\\()', '(%s)(\\.)', '(%s{2,})(\\s+)', "('%s)(?!')", "(''')", "(')(\\\\.)(')", '((?:%s/)*)(%s)', '((?:%s[/.])*)(%s)', '((?:(?:', '((\\?[^.])?)', '(//.*?)(\\n)', '(:)([a-zA-Z_]\\w*)', '(:)(\\s+)(', '(<%)|(<%=)', '(==|<=|<|>=|>|!=)', '(>)(\\s*)', '(?!//|/\\*)', '(?:%s|%s)', '(?:%s|%s+)', '(?:%s|[0-9])', '(?:[%s]+)', '(?:[^%s.;\\[/]+)', '(?<!:):(?!:)', '(?<!\\\\)"', '(?<!\\\\)/[im-psux]*', '(?<!\\\\)]', '(?<!\\\\)][im-psux]*', '(?<=[\\n;:])', '(?<=[\\n;])', '(?<=[^-])(-)(?=[^-])', '(?<=\\()', '(?=[%s]|$)', '(?=[^%s]*\\()', '(?=\\s*(//|$))', '(L)((?:%s/)*)(%s)(;)', '([^\\W\\d]|\\$)[\\w$]*', '([a-z_]\\w*)(\\s*)(\\()', '(\\$)(%s)', '(\\$)(\\w+)', '(\\$[-+]|\\+)?-?\\d+%s', '(\\()(\\s*)(using)(\\s)', '(\\(|\\))', '(\\.)', '(\\.)([a-zA-Z_]\\w*)', '(\\.)([a-z_]\\w*)', '(\\.)(type)\\b', '(\\[|\\])', '(\\\\<)|(\\\\\\$)', '(\\u00BB)', '(\\{|\\})', '(as|call|define)\\b', '(class|interface)\\b', '(function)(\\s+)', '(import)(\\s+)', '(let|var)(\\s+)', '(locals|stack)%s', '(module|import)(\\s+)', '(null|true|false)\\b', '(package)(\\s+)', '(reified|out|in)\\b', '(struct)(\\s+)', '(template)(\\s+)', '(true|false|null)\\b', '(use|destructuring)', '(var)(\\s+)', '(var|val)(\\s+)(\\()', ')', ')\\s+)*)(fun)(\\s+)', '*', '*.aj', '*.ceylon', '*.clj', '*.cljc', '*.cljs', '*.golo', '*.gradle', '*.groovy', '*.gs', '*.gsp', '*.gst', '*.gsx', '*.ik', '*.j', '*.java', '*.kt', '*.kts', '*.pig', '*.sarl', '*.scala', '*.vark', '*.xtend', '+', ',', ',+', '-', '----((.|\\n)*?)----', '--.*', '->', '-?0[xX][0-9a-fA-F]+', '-?\\d+', '-?\\d+/\\d+', '-?\\d+\\.\\d+', '-?\\d[\\d_]*', '-?\\d[\\d_]*L', '.', '..', '/', '/(?![/*])', '//.*?\\n', '/[*].*?[*]/', '/\\*', '/\\*.*?\\*/', '/\\*[\\w\\W]*?\\*/', '0[0-7]+j?', '0[0-7_]+[lL]?', '0[bB][01][01_]*[lL]?', '0[xX][0-9a-fA-F_]*', '0[xX][a-fA-F0-9]+', '0x-?[abcdef\\d]+', '0x[0-9a-fA-F]+', '0x[0-9a-f]+', '0|[1-9][0-9_]*[lL]?', ':', '::?#?', '::|!!|\\?[:.]', ':[\\w!:?]+', ';(.*?)\\n', ';.*', ';.*$', '<', '<%', '<%!--.*?--%>', '<%<', '<-', '<:', '<:<', '<=', '<>', '=', '=:=', '==', '=>', '>', '>:', '>=', '?', '@', '@%s', '@?[_', '@[^\\W\\d][\\w.]*', '@[a-zA-Z_][\\w$.]*', '@[a-zA-Z_][\\w.]*', '@[a-zA-Z_][\\w\\.]*', '@constructor', '@field', '@method', '@native', '@transient', '@type', '@volatile', 'Any', 'Any?', 'AspectJ', 'AspectJLexer', 'Boolean', 'Boolean?', 'Byte', 'Byte?', 'Ceylon', 'CeylonLexer', 'Cf', 'Char', 'Char?', 'Clojure', 'ClojureLexer', 'ClojureScript', 'ClojureScriptLexer', 'Double', 'Double?', 'Float', 'Float?', 'Golo', 'GoloLexer', 'Gosu', 'Gosu Template', 'GosuLexer', 'GosuTemplateLexer', 'Groovy', 'GroovyLexer', 'Int', 'Int?', 'Ioke', 'IokeLexer', 'Jasmin', 'JasminLexer', 'Java', 'JavaLexer', 'Kotlin', 'KotlinLexer', 'Ll', 'Lm', 'Lo', 'Long', 'Long?', 'Lt', 'Lu', 'Mc', 'Mn', 'Nd', 'Nl', 'Object%s', 'Pc', 'Pig', 'PigLexer', 'SARL', 'SarlLexer', 'Scala', 'ScalaLexer', 'Short', 'Short?', 'Sm', 'So', 'String', 'String?', 'Uninitialized%s', 'Unit', 'Unit?', 'Xtend', 'XtendLexer', 'Zs', '[', '[!#%&*\\-\\/:?@^', '[#=,./%+\\-?]', "['$]\\{(?!')", '[()#:]', '[*/]', '[0-9]+', '[0-9]+L?', '[0-9]+[kMGTP]?', '[0-9]+[lL]', '[;(){}\\[\\]]', '[A-Z][\\w!:?]*', '[A-Za-z_]\\w*', '[\\\'"\\\\]', '[\\[\\]]', '[\\w!:?]+:(?![\\w!?])', '[\\w.]+\\*?', '[]{}|(),[]', '[^"$\\\\]+', '[^"\\\\]+', '[^"]', '[^%s\\[)L]+', '[^%s]+', "[^'\\\\]+", '[^(:#\\\'")\\s]+', '[^*/]', '[^/*]+', '[^/]', '[^\\S\\n]+', '[^\\W\\d][\\w.]+@', '[^\\\\"$]+', '[^\\\\"]+', '[^\\\\\\\'"\\n]+', '[^\\]]', '[_\\$', '[a-zA-Z_$]\\w*', '[a-zA-Z_\\$]\\w*', '[a-zA-Z_][\\w$.]*\\*?', '[a-zA-Z_]\\w*', '[a-zA-Z_]\\w*:', '[a-z][\\w.]*', '[a-z_][\\w!:?]*', '[fs]"', '[fs]"""', '[{}();:.,]', '[{}()\\[\\];,.]', '[~^*!%&\\[\\]<>|+=/?-]', '\\', '\\$', '\\$%s', '\\$/((?!/\\$).)*/\\$', '\\$[01]+', '\\$\\$', '\\$\\{', '\\)', '\\*/', '\\.', '\\.annotation%s', '\\.catch%s', '\\.end%s', '\\.field%s', '\\.method%s', '\\.set%s', '\\.throws%s', '\\A#!(.*?)\\n', '\\S+\\s+', '\\[+', '\\\\', '\\\\"', '\\\\$', '\\\\(.|[a-z]+)', '\\\\.', '\\\\/', '\\\\\\\\', '\\\\]', '\\\\u[\\da-fA-F]{4}', '\\b', '\\b(end)(\\s+)(%s)%s', '\\b(export)(\\s+)', '\\b(given)\\b', '\\b(given)\\b(\\s*)(%s)', '\\b(import)(\\s+)', '\\b(package)(\\s+)', '\\b(this|super)\\b', '\\b(val|var)\\b', '\\n', '\\n+', '\\s+', '\\u00AB', '\\w+', '\\{', '\\}', ']', ']*', '^#!([^\\n]*)$', '^(#!/.+?)(\\n)', '^(\\s*)(default)(:)', '^\\s*[a-z]+_[a-z]+\\b', '^\\s*\\.class\\s', '`)', '`?[\\w.]+\\*?', '`?[a-zA-Z_][\\w$]*', '`[^`]+`', 'aaload', 'aastore', 'abstract', 'accessor', 'aconst_null', 'adviceexecution', 'after', 'agent', 'agent-errors', 'aget', 'alength', 'all%s', 'all-ns', 'aload', 'aload_0', 'aload_1', 'aload_2', 'aload_3', 'aload_w', 'alter', 'and', 'annotation', 'annotation-body', 'annotation-default', 'annotation-items', 'annotations', 'append-child', 'apply', 'areturn', 'args', 'around', 'array-map', 'arraylength', 'asInstanceOf', 'as\\?', 'aset', 'aset-boolean', 'aset-byte', 'aset-char', 'aset-double', 'aset-float', 'aset-int', 'aset-long', 'aset-short', 'aspect', 'aspectj', 'assert', 'assoc', 'astore', 'astore_0', 'astore_1', 'astore_2', 'astore_3', 'astore_w', 'athrow', 'await', 'await-for', 'baload', 'base', 'bastore', 'bean', 'before', 'binding', 'bipush', 'bit-and', 'bit-not', 'bit-or', 'bit-shift-left', 'bit-shift-right', 'bit-xor', 'boolean', 'branch?', 'breakpoint', 'builtins', 'butlast', 'byte', 'call', 'caload', 'case', 'cast', 'castore', 'catch', 'caught-exception', 'ceylon', 'cflow', 'cflowbelow', 'char', 'children', 'class', 'class/convert-dots', 'class/no-dots', 'classOf', 'clear-agent-errors', 'clj', 'cljs', 'clojure', 'clojurescript', 'comment', 'comments', 'commute', 'comp', 'comparator', 'complement', 'concat', 'cond', 'conj', 'cons', 'constantly', 'constants', 'construct-proxy', 'contains?', 'count', 'create-ns', 'create-struct', 'cycle', 'd2f', 'd2i', 'd2l', 'dadd', 'daload', 'dastore', 'dcmpg', 'dcmpl', 'dconst_0', 'dconst_1', 'ddiv', 'dec', 'declarations', 'declare', 'def', 'def-', 'default', 'default%s', 'definline', 'definterface', 'defmacro', 'defmethod', 'defmulti', 'defn', 'defn-', 'defonce', 'defproject', 'defprotocol', 'defrecord', 'defstruct', 'deftype', 'deref', 'descriptor/no-dots', 'difference', 'disj', 'dissoc', 'distinct', 'dload', 'dload_0', 'dload_1', 'dload_2', 'dload_3', 'dload_w', 'dmul', 'dneg', 'do', 'doall', 'doc', 'documentation', 'dorun', 'doseq', 'dosync', 'dotimes', 'doto', 'double', 'doublestring', 'down', 'drem', 'dreturn', 'drop', 'drop-while', 'dstore', 'dstore_0', 'dstore_1', 'dstore_2', 'dstore_3', 'dstore_w', 'dsub', 'dup', 'dup2', 'dup2_x1', 'dup2_x2', 'dup_x1', 'dup_x2', 'edit', 'else', 'enclosing-method', 'end', 'end?', 'ensure', 'error', 'error:', 'eval', 'every?', 'exception', 'execution', 'export-path', 'exports', 'extension', 'f2d', 'f2i', 'f2l', 'fadd', 'faload', 'false?', 'fastore', 'fcmpg', 'fcmpl', 'fconst_0', 'fconst_1', 'fconst_2', 'fdiv', 'ffirst', 'field', 'file-seq', 'filter', 'final', 'finally', 'find', 'find-doc', 'find-ns', 'find-var', 'first', 'fload', 'fload_0', 'fload_1', 'fload_2', 'fload_3', 'fload_w', 'float', 'flush', 'fmul', 'fn', 'fneg', 'fnseq', 'for', 'frem', 'frest', 'freturn', 'fstore', 'fstore_0', 'fstore_1', 'fstore_2', 'fstore_3', 'fstore_w', 'fsub', 'funcname', 'function', 'generic', 'gensym', 'get', 'get-proxy-class', 'golo', 'gosu', 'goto', 'goto_w', 'groovy', 'gst', 'handler', 'hash-map', 'hash-set', 'http://clojure.org/', 'http://www.sarl.io', 'https://ioke.org/', 'i2b', 'i2c', 'i2d', 'i2f', 'i2l', 'i2s', 'iadd', 'iaload', 'iand', 'iastore', 'iconst_0', 'iconst_1', 'iconst_2', 'iconst_3', 'iconst_4', 'iconst_5', 'iconst_m1', 'identical?', 'identity', 'idiv', 'if', 'if-let', 'if-not', 'if_acmpeq', 'if_acmpne', 'if_icmpeq', 'if_icmpge', 'if_icmpgt', 'if_icmple', 'if_icmplt', 'if_icmpne', 'ifeq', 'ifge', 'ifgt', 'ifle', 'iflt', 'ifne', 'ifnonnull', 'ifnull', 'iinc', 'iinc_w', 'ik', 'iload', 'iload_0', 'iload_1', 'iload_2', 'iload_3', 'iload_w', 'implicit', 'import', 'import-path', 'imports', 'imul', 'in-ns', 'inc', 'index', 'ineg', 'inheritance', 'initialization', 'inline', 'insert-child', 'insert-left', 'insert-right', 'inspect-table', 'inspect-tree', 'instance?', 'int', 'int2byte', 'int2char', 'int2short', 'interleave', 'interpolatableText', 'interpolated-string', 'interpolation', 'intersection', 'into', 'into-array', 'invocation', 'ioke', 'ior', 'irem', 'ireturn', 'is%s', 'isInstanceOf', 'ishl', 'ishr', 'issingleton', 'istore', 'istore_0', 'istore_1', 'istore_2', 'istore_3', 'istore_w', 'isub', 'it\\b', 'iterate', 'iushr', 'ixor', 'jasmin', 'jasminxt', 'java', 'join', 'jsr', 'jsr_w', 'key', 'keys', 'keyword', 'keyword?', 'keywords', 'kotlin', 'l2d', 'l2f', 'l2i', 'label', 'ladd', 'laload', 'land', 'last', 'lastore', 'lazy', 'lazy-cat', 'lazy-cons', 'lcmp', 'lconst_0', 'lconst_1', 'ldc2_w', 'ldiv', 'left', 'lefts', 'let', 'line-seq', 'list', 'list*', 'lload', 'lload_0', 'lload_1', 'lload_2', 'lload_3', 'lload_w', 'lmul', 'lneg', 'load', 'load-file', 'lock', 'locking', 'long', 'lookupswitch', 'loop', 'lor', 'lrem', 'lreturn', 'lshl', 'lshr', 'lstore', 'lstore_0', 'lstore_1', 'lstore_2', 'lstore_3', 'lstore_w', 'lsub', 'lushr', 'lxor', 'macroexpand', 'macroexpand-1', 'make-array', 'make-node', 'map', 'map-invert', 'map?', 'mapcat', 'match', 'max', 'max-key', 'memfn', 'merge', 'merge-with', 'meta', 'method', 'method%s', 'min', 'min-key', 'modifiers', 'modname', 'monitorenter', 'monitorexit', 'multiline_string', 'name', 'names', 'namespace', 'neg?', 'new', 'newline', 'next', 'nil?', 'no-verification', 'node', 'nop', 'not', 'not-any?', 'not-every?', 'not=', 'ns', 'ns-imports', 'ns-interns', 'ns-map', 'ns-name', 'ns-publics', 'ns-refers', 'ns-resolve', 'ns-unmap', 'nth', 'nthrest', 'operators', 'or', 'override', 'package', 'parents', 'parents:', 'parse', 'partial', 'path', 'peek', 'percflow', 'percflowbelow', 'pertarget', 'perthis', 'pertypewithin', 'pig', 'pointcut', 'pop', 'pop2', 'pos?', 'pr', 'pr-str', 'precedence', 'precedence:', 'preinitialization', 'print', 'print-str', 'println', 'println-str', 'private', 'privileged', 'prn', 'prn-str', 'proceed', 'project', 'protected', 'proxy', 'proxy-mappings', 'punct', 'punctuation', 'qualified-name', 'quot', 'quote', 'quoted', 'rand', 'rand-int', 'range', 're-find', 're-groups', 're-matcher', 're-matches', 're-pattern', 're-seq', 'read', 'read-line', 'reduce', 'ref', 'ref-set', 'refer', 'rem', 'remove', 'remove-method', 'remove-ns', 'rename', 'rename-keys', 'repeat', 'replace', 'replicate', 'resolve', 'rest', 'resultset-seq', 'ret', 'ret_w', 'return', 'returning', 'reverse', 'rfirst', 'right', 'rights', 'root', 'rrest', 'rseq', 'saload', 'sarl', 'sastore', 'scala', 'scope', 'script-header', 'sealed', 'second', 'select', 'select-keys', 'send', 'send-off', 'seq', 'seq-zip', 'seq?', 'set', 'short', 'singlestring', 'singleton-type', 'sipush', 'slashRegexp', 'slurp', 'soft', 'soft:', 'some', 'sort', 'sort-by', 'sorted-map', 'sorted-map-by', 'sorted-set', 'special-symbol?', 'split-at', 'split-with', 'squareRegexp', 'squareText', 'static', 'static%s', 'staticinitialization', 'storage-modifiers', 'str', 'string', 'string?', 'stringTemplate', 'string_common', 'stringescape', 'strings', 'struct', 'struct-map', 'structname', 'subs', 'subvec', 'swap', 'symbol', 'symbol?', 'symbols', 'sync', 'synchronized', 'table', 'tableswitch%s', 'take', 'take-nth', 'take-while', 'target', 'template', 'templateText', 'test', 'text', 'text/x-aspectj', 'text/x-ceylon', 'text/x-clojure', 'text/x-clojurescript', 'text/x-gosu', 'text/x-gosu-template', 'text/x-groovy', 'text/x-iokesrc', 'text/x-java', 'text/x-kotlin', 'text/x-pig', 'text/x-sarl', 'text/x-scala', 'text/x-xtend', 'then', 'thisAspectInstance', 'thisJoinPoint', 'throw', 'throwing', 'time', 'to-array', 'to-array-2d', 'tree-seq', 'triplestring', 'true?', 'try', 'types', 'union', 'unlock', 'up', 'update-proxy', 'using', 'val', 'vals', 'var', 'var-get', 'var-set', 'var?', 'variable', 'varname', 'vector', 'vector-zip', 'vector?', 'verification', 'warning', 'warning:', 'when', 'when-first', 'when-let', 'when-not', 'while', 'whitespace', 'with-local-vars', 'with-meta', 'with-open', 'with-out-str', 'within', 'withincode', 'xml-seq', 'xml-zip', 'xtend', 'yield', 'zero?', 'zipmap', 'zipper', '|', '|`', '~', "~@|[`\\'#^~&@]", '←', '→', '⇒']